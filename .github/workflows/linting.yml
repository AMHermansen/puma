name: Linting
on: [push]
jobs:
  linter:
    runs-on: ubuntu-latest
    container: python:3.8-slim
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - run: pip install flake8
      - run: flake8 .
  pylint:
    runs-on: ubuntu-latest
    container: python:3.8-slim
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install pylint
        run: pip install pylint==2.12.2
      - run: pip install .
      - run: pylint -j2 ./puma
  darglint:
    runs-on: ubuntu-latest
    container: python:3.8-slim
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install darglint
        run: pip install darglint==1.8.1
      - run: darglint .
  black:
    runs-on: ubuntu-latest
    container: python:3.8-slim
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install black
        run: pip install black==22.3.0
      - run: black --check .

  publish:
    name: Publish to PyPI
    # needs: [linter, pylint, darglint, black]
    if: github.event_name == 'push'
    # if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Build package
        run: |
          python -m pip install -U pip build
          python -m build
      - name: Publish
        uses: pypa/gh-action-pypi-publish@v1.1.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          url: https://test.pypi.org/legacy/